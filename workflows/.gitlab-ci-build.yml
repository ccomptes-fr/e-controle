.build:
  image: ${DOCKER_REGISTRY}docker:20.10.12
  services:
    - name: ${DOCKER_REGISTRY}cicd/docker-dind:1.0.1
      alias: docker
  stage: build
  allow_failure: false
  interruptible: true
  needs:
    - test:tests_back
    - quality:sonarqube
  variables: &build_variables
    DOCKER_TLS_CERTDIR: "/certs"
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
    TRIVY_VERSION: "0.37.2"
    DOCKER_REGISTRY_IMAGE: ${DOCKER_REGISTRY}${DOCKER_REGISTRY_NAMESPACE}${IMAGE_NAME}:${IMAGE_TAG}
  before_script:
    - echo ${PROXY_CC_URL}
    - export http_proxy=${PROXY_CC_URL}
    - export https_proxy=${PROXY_CC_URL}
    # re install wget car celui par defaut ne supporte pas le proxy avec une erreur 400 Bad Request https://github.com/alpinelinux/docker-alpine/issues/51
    - apk --no-cache add openssl wget
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
    # remove proxy for docker
    - unset http_proxy
    - unset https_proxy
  script:
    # build image docker image e-controle or e-controle-webdav
    # for --pull --no-cache see https://pythonspeed.com/articles/docker-cache-insecure-images/
    - docker build --pull --no-cache --build-arg PROXY_CC_URL=${PROXY_CC_URL} --build-arg NEXUS_URL=${NEXUS_URL} --build-arg NEXUS_HOST=${NEXUS_HOST} --build-arg DOCKER_REGISTRY=${DOCKER_REGISTRY} --build-arg REGISTRY_DOMAINE=${REGISTRY_DOMAINE} -t ${DOCKER_REGISTRY_IMAGE} -f ${DOCKER_FILE} . --label "statut=${STATUT}"
    - docker push ${DOCKER_REGISTRY_IMAGE}
    # scan image report
    - export http_proxy=${PROXY_CC_URL}
    - export https_proxy=${PROXY_CC_URL}
    - ./trivy image --download-db-only
    - unset http_proxy
    - unset https_proxy
    - ./trivy image --exit-code 0 --severity CRITICAL --format template --template "@contrib/html.tpl" -o report-trivy.html ${DOCKER_REGISTRY_IMAGE}
    # cleaning to save disk space
    - docker rmi ${DOCKER_REGISTRY_IMAGE}
  cache:
    paths:
      - .trivycache/
  artifacts:
    paths:
      - report-trivy.html

# Build e-controle
build:commit:
  extends:
    - .build
  when: manual
  variables:
    <<: *build_variables
    IMAGE_TAG: $CI_COMMIT_SHA
    IMAGE_NAME: e-controle
    DOCKER_FILE: Dockerfile
    STATUT: "Snapshot"

build:tag:
  extends:
    - .build
  when: manual
  only:
    refs:
      - tags
  variables:
    <<: *build_variables
    IMAGE_TAG: $CI_COMMIT_TAG
    IMAGE_NAME: e-controle
    DOCKER_FILE: Dockerfile
    STATUT: "Release"

# Build e-controle-webdav
build:commit_webdav:
  extends:
    - .build
  when: manual
  variables:
    <<: *build_variables
    IMAGE_TAG: $CI_COMMIT_SHA
    IMAGE_NAME: e-controle-webdav
    DOCKER_FILE: Webdav.Dockerfile
    STATUT: "Snapshot"

build:tag_webdav:
  extends:
    - .build
  when: manual
  only:
    refs:
      - tags
  variables:
    <<: *build_variables
    IMAGE_TAG: $CI_COMMIT_TAG
    IMAGE_NAME: e-controle-webdav
    DOCKER_FILE: Webdav.Dockerfile
    STATUT: "Release"
