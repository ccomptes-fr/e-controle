# Generated by Django 3.2.13 on 2023-05-30 08:28

import control.models
import control.upload_path
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('control', '0045_alter_control_reference_code'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='control',
            options={'verbose_name': 'Procédure', 'verbose_name_plural': 'Procédures'},
        ),
        migrations.AddField(
            model_name='control',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='control',
            name='reference_code',
            field=models.CharField(error_messages={'unique': 'UNIQUE'}, help_text='Ce code est utilisé notamment pour le dossier de stockage des réponses', max_length=70, unique=True, validators=[django.core.validators.RegexValidator(message='INVALID', regex='^[\\s\\w-]+[^\\.]$')], verbose_name='code de référence'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='control',
            field=models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to='control.control', verbose_name='procédure'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='is_closed',
            field=models.BooleanField(default=False, help_text='Ce questionnaire a-t-il été accepté par le demandeur ?', verbose_name='terminé'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='is_finalized',
            field=models.BooleanField(default=False, help_text='Ce questionnaire a-t-il été finalisé par le demandeur ?', verbose_name='finalisé'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='is_not_closed',
            field=models.BooleanField(default=False, help_text='Ce questionnaire a-t-il été non accepté par le demandeur ?', verbose_name='non terminé'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='is_replied',
            field=models.BooleanField(default=False, help_text="Ce questionnaire a-t-il obtenu toutes les réponses de l'organisme répondant ?", verbose_name='répondu'),
        ),
        migrations.AlterField(
            model_name='questionnaire',
            name='sent_date',
            field=models.DateField(blank=True, help_text='Date de transmission du questionnaire', null=True, verbose_name="date d'envoi"),
        ),
        migrations.AlterField(
            model_name='responsefile',
            name='file',
            field=models.FileField(max_length=2000, upload_to=control.upload_path.response_file_path, verbose_name='fichier'),
        ),
        migrations.AlterField(
            model_name='responsefile',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Ce fichier est-il dans la corbeille ?', verbose_name='Supprimé'),
        ),
        migrations.CreateModel(
            name='QuestionnaireFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('file', models.FileField(upload_to=control.upload_path.questionnaire_pj_file_path, verbose_name='fichier')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire_files', to='control.questionnaire', verbose_name='questionnaire')),
            ],
            options={
                'verbose_name': 'Questionnaire: Fichier Annexe',
                'verbose_name_plural': 'Questionnaire: Fichiers Annexes',
                'ordering': ('questionnaire', 'order'),
            },
            bases=(models.Model, control.models.FileInfoMixin),
        ),
    ]
